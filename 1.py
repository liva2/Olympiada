
a=open('input1.txt')   # встаем на начало файла input.txt

M=int(next(a).rstrip())   # считываем 1-ю строчку файла - т.е. М
# функция next() считывает очередную строку, и ставит "указатель"
#в файле на начало следующей строки

x={}   # ингредиенты (словарь)
for i in range(M):
  name, q = next(a).rstrip().split()
  x[name]=int(q)   # например x['lemon']=7 означает, что запасы лимона равны 7 ед.
  
N=int(next(a).rstrip())

nap={}   # напитки (словарь)
for i in range(N):
  name, q = next(a).rstrip().split()
  nap[name]={}   # создаем словарь для нового напитка, структура словарь в словаре
  for j in range(int(q)):
    ing, qing = next(a).rstrip().split()
    nap[name][ing]=int(qing)   # заносим кол-во единиц данного ингредиента для данного напитка
print(nap)    
K=int(next(a).rstrip())

que=[]   # очередь заказов

for i in range(K):
  que.append(next(a).rstrip())


g=open('output.txt', 'w')
  
y=dict.copy(x)   # создаем копию словаря ингредиентов.
                 # Значения ингредиентов будут уменьшаться по мере расходования ингредиентов
                 # на исполнение заказов
for i in range(K+1):
  s=0   #  кол-во напитков, которые можно приготовить 
  for curnap in nap:   # curnap - текущий рассматриваемый напиток
    w=1   # предполагаем, что текущие запасы позволяют приготовить данный текущий напиток 
    for ing in nap[curnap]:
      if nap[curnap][ing]>x[ing]:   # проверяем, достаточно ли у нас текущего ингредиента
        w=0   # запасов не хватило, поэтому этот напиток невозможно приготовить,
              # поэтому он не внесет вклада в итоговое кол-во напитков, которые можно приготовить 
        break
    s+=w    
  print(s, file=g)    #  печатаем в файл output.txt кол-во напитков, которые можно приготовить 
  if i<K:
    for ing in nap[que[i]]:
      x[ing]=x[ing]-nap[que[i]][ing]    # после приготовления напитка,
                                        # уменьшаем запасы на потратившееся кол-во ингредиентов
    
    
g.close()



